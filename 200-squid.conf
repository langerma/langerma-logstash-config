filter {
  if [fields][middleware]=="squid.json" {
    json {
      id => "json_squid.json"
      source => "message"
    }
    mutate {
      id => "mutate1_squid.json"
      remove_field => [ "message" ]
    }
    # this filter leaves much to be desired
    useragent {
      id => "useragent_squid.json"
      source => "agent"
      target => "user_agent"
    }
  }
  if [fields][middleware] == "squid.json" {
    date {
      id => "date_squid.json"
      match => [ "timestamp" , "ISO8601" ]
    }
  }
  if "_jsonparsefailure" in [tags] {
    mutate {
      id => "mutate2_squid.json"
      add_tag => ["debrub"]
    }
  }
}

filter {
        if [fields][middleware]=="squid" {
        grok {
	    id => "grok_squid"
            patterns_dir => ["/app/logstash/conf.d/patterns"]
            match => [
                "message", "%{SQUIDLOG}",
                "message", "%{SQUIDLOGLOC}",
                "message", "%{SQUIDERROR}"
                ]
            add_tag => ["squid"]
        }
        mutate {
            id => "mutate_squid"
            add_field => { "src_client" => "%{src_ip}" }
            add_field => { "dst_ip" => "%{dst_host}" }
        }
        #dns {
        #    action => "replace"
        #    resolve => [ "dst_ip" ]
        #    reverse => [ "src_client" ]
        #    add_tag => [ "dns_lookup" ]
        #}
        date {
		id => "date_squid"
                match => [ "timestamp", "UNIX" ]
        }
        if [dst_ip] == "127.0.0.1" {
            mutate {
		id => "mutate_localhost_squid"
                add_tag => ["monitoring"]
            }

        } elseif ["dst_ip"] == "::1" {
            mutate {
		id => "mutate_localhostv6_squid"
                add_tag => ["monitoring"]
            }
        } else {
            geoip {
		id => "geoip_squid"
                source => "dst_ip"
            }
        }

            if "_grokparsefailure" in [tags] {
            mutate {
		id => "mutate_grokparsefailure_squid"
                remove_tag => [ "_grokparsefailure" ]
                        }
        }
        }
}
